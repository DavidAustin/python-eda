# This is the template file for creating symbols with tragesym
# every line starting with '#' is a comment line.

[options]
# wordswap swaps labels if the pin is on the right side an looks like this:
#   "PB1 (CLK)". That's useful for micro controller port labels
# rotate_labels rotates the pintext of top and bottom pins
#   this is useful for large symbols like FPGAs with more than 100 pins
# sort_labels will sort the pins by it's labels
#   useful for address ports, busses, ...
wordswap=yes
rotate_labels=no
sort_labels=no
generate_pinseq=yes
sym_width=14000
pinwidthvertical=500
pinwidthhorizontal=500

[geda_attr]
# name will be printed in the top of the symbol
# name is only some graphical text, not an attribute
# version specifies a gschem version.
# if you have a device with slots, you'll have to use slot= and slotdef=
# use comment= if there are special information you want to add
version=20060113 1
name=SARA-N201-02B
device=SARA-N201-02B
refdes=U?
footprint=?
description=
documentation=
author=
dist-license=
use-license=
numslots=0
#slot=1
#slotdef=1:
#slotdef=2:
#slotdef=3:
#slotdef=4:
#comment=
#comment=
#comment=

[pins]
# tabseparated list of pin descriptions
# ----------------------------------------
# pinnr is the physical number of the pin
# seq is the pinseq= attribute, leave it blank if it doesn't matter
# type can be (in, out, io, oc, oe, pas, tp, tri, clk, pwr)
# style can be (line,dot,clk,dotclk,spacer,none). none if only want to add a net
# posit. can be (l,r,t,b) or empty for nets.
# net specifies the name of the net. Vcc or GND for example.
# label represents the pinlabel.
#	negation lines can be added with "\_" example: \_enable\_ 
#	if you want to write a "\" use "\\" as escape sequence
#-----------------------------------------------------
#pinnr	seq	type	style	posit.	net	label	
#-----------------------------------------------------
1		out	line	b		GND
2		in	line	r		RSVD
3		pwr	line	b		GND
4		in	line	l		V_INT
41		out	line	l		VSIM
39		pwr	line	l		SIM_IO
38		in	line	l		SIM_CLK
40		in	line	l		SIM_RST
5		in	line	b		GND
6		in	line	r		RSVD
7		in	line	r		RSVD
8		in	line	r		RSVD
9		pwr	line	r		RSVD
10		in	line	l		RTS
11		out	line	l		CTS
12		in	line	l		TXD
13		pwr	line	l		RXD
14		in	line	b		GND
15		in	line	r		RSVD
16		in	line	l		GPIO1
17		in	line	r		RSVD
18		in	line	l		RESET_N
19		pwr	line	r		RSVD
20		in	line	b		GND
21		out	line	b		GND
22		in	line	b		GND
23		pwr	line	r		RSVD
24		in	line	l		GPIO2
25		in	line	r		RSVD
26		in	line	l		SDA
27		in	line	l		SCL
28		in	line	r		RSVD
29		pwr	line	r		RSVD
30		in	line	b		GND
31		out	line	r		RSVD
32		in	line	b		GND
33		pwr	line	r		RSVD
34		in	line	r		RSVD
35		in	line	r		RSVD
36		in	line	r		RSVD
37		in	line	r		RSVD
42		in	line	r		RSVD
43		pwr	line	b		GND
44		in	line	r		RSVD
45		in	line	r		RSVD
46		in	line	r		RSVD
47		in	line	r		RSVD
48		in	line	r		RSVD
49		pwr	line	r		RSVD
50		in	line	b		GND
51		out	line	t		VCC
52		in	line	t		VCC
53		pwr	line	t		VCC
54		in	line	b		GND
55		in	line	b		GND
56		in	line	l		ANT
57		in	line	b		GND
58		in	line	b		GND
59		pwr	line	b		GND
60		in	line	b		GND
61		out	line	b		GND
62		in	line	l		ANT_DET
63		pwr	line	b		GND
64		in	line	b		GND
65		in	line	b		GND
66		in	line	b		GND
67		in	line	b		GND
68		in	line	b		GND
69		pwr	line	b		GND
70		in	line	b		GND
71		out	line	b		GND
72		in	line	b		GND
73		pwr	line	t		GND
74		in	line	t		GND
75		in	line	t		GND
76		in	line	t		GND
77		in	line	t		GND
78		in	line	t		GND
79		pwr	line	t		GND
70		in	line	t		GND
81		out	line	t		GND
82		in	line	t		GND
83		pwr	line	t		GND
84		in	line	t		GND
85		in	line	t		GND
86		in	line	t		GND
87		in	line	t		GND
88		in	line	t		GND
89		pwr	line	t		GND
90		in	line	t		GND
91		out	line	t		GND
92		in	line	t		GND
93		pwr	line	t		GND
94		in	line	t		GND
95		in	line	t		GND
96		in	line	t		GND
